---
import Layout from "@/layouts/Layout.astro";
import Title from "../components/ui/Title.astro";
import Container from "../components/ui/Container.astro";
import { Image } from "astro:assets";
import Line from "@/assets/line.png";
import Link from "../components/ui/Link.astro";
import type { ImageMetadata } from "astro";
import Reviews from "../components/Reviews.astro";

const toolImages = await Astro.glob(
  "/src/assets/tools/*.{jpeg,jpg,png,svg,gif}",
).then((files) => {
  return files.map((file) => file.default);
});
---

<Layout
  title="Karson Nichols | Software Developer"
  description="Software developer"
>
  <section class="bg-blue-hero">
    <Container>
      <div class="flex flex-row text-center py-14 gap-20">
        <div class="flex-1 flex flex-col gap-8">
          <Title tag="h1" variant="h1"> About </Title>
        </div>
      </div>
    </Container>
  </section>

  <Container tag="section" classList="py-10 my-10">
    <Title tag="h2" variant="h2">Who am I</Title>
    <Image
      src={Line}
      alt="Line seporator"
      class="text-center mx-auto pt-2"
      loading="eager"
    />

    <div class="flex flex-col md:flex-row gap-20 py-10">
      <div class="flex-1 flex flex-col gap-8">
        <p>
          I'm Karson, a software developer based in Alabama with over {
            new Date().getFullYear() - new Date("2019-09-01").getFullYear()
          } years of experience building web applications. My journey into freelancing,
          particularly through platforms like Upwork, significantly broadened my
          exposure to diverse tools and development setups, truly opening my horizons.
        </p>
        <p>
          I thrive on solving complex technical challenges and specialize in
          helping clients get their applications running smoothly again. As a
          self-starter, I'm constantly honing my skills in modern web
          technologies. My expertise spans across React and Laravel, enabling me
          to build robust and scalable solutions. I'm highly proficient in PHP
          and have also gained valuable experience working with Python and
          Vue.js.
        </p>
        <p>
          Whether you're looking to integrate a new feature into your existing
          application or need a persistent bug squashed, feel free to send me a
          message. I'd be more than happy to discuss your needs and help bring
          your project to fruition.
        </p>

        <div class="mt-4">
          <Link to="/contact" variant="filled" classList="py-3">
            Contact Me
          </Link>
        </div>
      </div>

      <div class="flex-1 flex flex-col gap-8">
        <div
          class="float-container relative overflow-hidden w-full h-full min-h-[450px]"
        >
          {
            toolImages.map((src) => (
              <Image
                src={src}
                alt="bootstrap"
                class="floating-img absolute w-[75px] h-[75px] pointer-events-none select-none"
              />
            ))
          }
        </div>
      </div>
    </div>
  </Container>

  <section class="bg-blue-hero">
    <Container classList="py-20">
      <Title tag="h2" variant="h2">Reviews</Title>
      <Image src={Line} alt="Line seporator" class="text-center mx-auto pt-2" />

      <Reviews />
    </Container>
  </section>

  <script>
    const images = document.querySelectorAll(".floating-img");
    const container = document.querySelector(".float-container");

    const containerWidth = container?.clientWidth ?? 0;
    const containerHeight = container?.clientHeight ?? 0;

    const floats = [];

    images.forEach((img, index) => {
      const float = {
        el: img,
        // x: Math.random() * (containerWidth - img.clientWidth),
        // y: Math.random() * (containerHeight - img.clientHeight),
        x: (containerWidth - img.clientWidth) / 2,
        y: (containerHeight - img.clientHeight) / 2,
        dx: (Math.random() - 0.5) * 1.5, // Horizontal speed
        dy: (Math.random() - 0.5) * 1.5, // Vertical speed
      };
      floats.push(float);
    });

    function animate() {
      floats.forEach((f) => {
        f.x += f.dx;
        f.y += f.dy;

        // Bounce off edges
        if (f.x <= 0 || f.x + f.el.clientWidth >= containerWidth) f.dx *= -1;
        if (f.y <= 0 || f.y + f.el.clientHeight >= containerHeight) f.dy *= -1;

        f.el.style.transform = `translate(${f.x}px, ${f.y}px)`;
      });

      requestAnimationFrame(animate);
    }

    animate();
  </script>
</Layout>
