---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import Layout from "../../../layouts/Layout.astro";
import Container from "../../../components/ui/Container.astro";
import Title from "../../../components/ui/Title.astro";
import CardBlog from "../../../components/ui/CardBlog.astro";
import Line from "@/assets/line.webp";

export async function getStaticPaths() {
  const allPosts = await getCollection("blog", ({ data }) => {
    return !data.draft;
  });

  const sortedPosts = allPosts.sort((a, b) => {
    return b.data.publishDate.getTime() - a.data.publishDate.getTime();
  });

  const postsPerPage = 9;
  const totalPages = Math.ceil(sortedPosts.length / postsPerPage);

  return Array.from({ length: totalPages }, (_, i) => {
    const page = i + 1;
    const start = (page - 1) * postsPerPage;
    const end = start + postsPerPage;

    return {
      params: { page: page.toString() },
      props: {
        posts: sortedPosts.slice(start, end),
        currentPage: page,
        totalPages,
        allPosts: sortedPosts,
      },
    };
  }).slice(1);
}

const { posts, currentPage, totalPages, allPosts } = Astro.props;
const allTags = [...new Set(allPosts.flatMap((post: any) => post.data.tags))];
const displayTags = allTags.slice(0, 5);
---

<Layout
  title=`Blog - Page ${currentPage} | Karson Nichols`
  description="Explore articles, tutorials, and insights on web development, design, and building modern digital experiences."
>
  <section class="py-8 md:py-12">
    <Container>
      <div class="max-w-4xl mx-auto text-center space-y-3">
        <Title tag="h1" variant="h1" classList="!text-3xl md:!text-5xl"> Blog </Title>

        <p class="text-base md:text-lg text-gray-600 max-w-2xl mx-auto">
          Insights, tutorials, and thoughts on web development and design.
        </p>

        {
          displayTags.length > 0 && (
            <div class="flex flex-wrap gap-2 justify-center items-center pt-2">
              {displayTags.map((tag) => (
                <span class="px-3 py-1 bg-gray-100 rounded-full text-xs font-medium text-gray-700">
                  {tag}
                </span>
              ))}
            </div>
          )
        }
      </div>
    </Container>
  </section>

  <Container tag="section" classList="py-0 pb-10">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 md:gap-10">
      {posts.map((post: any) => <CardBlog entry={post} url={`/blog/${post.id}/`} />)}
    </div>

    {
      totalPages > 1 && (
        <div class="flex justify-center items-center gap-2 mt-12 flex-wrap">
          {currentPage > 1 && (
            <a
              href={currentPage === 2 ? "/blog/" : `/blog/page/${currentPage - 1}/`}
              class="px-4 py-2 backdrop-blur-xl bg-white/80 border border-white text-gray-700 hover:bg-blue-base/10 rounded-lg transition-all"
            >
              ← Previous
            </a>
          )}

          {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
            <a
              href={page === 1 ? "/blog/" : `/blog/page/${page}/`}
              class={`px-4 py-2 rounded-lg transition-all ${
                page === currentPage
                  ? "bg-blue-base text-white shadow-lg"
                  : "backdrop-blur-xl bg-white/80 border border-white text-gray-700 hover:bg-blue-base/10"
              }`}
            >
              {page}
            </a>
          ))}

          {currentPage < totalPages && (
            <a
              href={`/blog/page/${currentPage + 1}/`}
              class="px-4 py-2 backdrop-blur-xl bg-white/80 border border-white text-gray-700 hover:bg-blue-base/10 rounded-lg transition-all"
            >
              Next →
            </a>
          )}
        </div>
      )
    }
  </Container>
</Layout>

<style>
  [x-cloak] {
    display: none !important;
  }
</style>
