---
import { Image, Picture } from "astro:assets";
import type { ImageMetadata } from "astro";

import Title from "./Title.astro";
import Link from "./Link.astro";

const { title, link, linkText, date, image, thumbnail, url, tools } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/project/*.{jpeg,jpg,png,gif,webp}"
);

const displayImage = thumbnail || image;
const displayTools = tools?.filter((tool: any) => tool.featured).slice(0, 3) || [];
---

<div
  x-data="{ show: false }"
  x-cloak
  x-intersect.once="show = true"
  x-bind:class="show ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'"
  class="transition-all duration-[1500ms] ease-out transform group"
>
  <a
    href={url}
    class="block backdrop-blur-xl bg-white/80 border-2 border-white rounded-2xl shadow-lg hover:shadow-xl transition-all overflow-hidden"
  >
    <div class="relative overflow-hidden border-b-2 border-gray-100">
      <Image
        src={images[displayImage]()}
        alt={`${title} - Custom web development project showcase`}
        loading="lazy"
        class="w-full h-64 object-cover object-top group-hover:scale-105 transition-transform duration-500"
      />
      <div
        class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end justify-center p-6"
      >
        <span class="text-white font-semibold">View Project</span>
      </div>
    </div>

    <div class="p-6 space-y-3">
      <div>
        <Title
          tag="h3"
          variant="h3"
          classList="text-blue-base group-hover:text-orange-base transition-colors !text-2xl !mb-2"
        >
          {title}
        </Title>
        <div class="flex items-center gap-2 mb-2">
          <div class="w-1.5 h-1.5 bg-green-500 rounded-full"></div>
          <span class="text-xs text-gray-500">{date}</span>
        </div>
        <p class="text-sm text-gray-600 break-all">{linkText}</p>
      </div>

      {
        displayTools.length > 0 && (
          <div class="flex flex-wrap gap-1.5 pt-2">
            {displayTools.map((tool: any) => (
              <span class="px-2 py-0.5 bg-blue-base/10 text-blue-base rounded text-xs font-medium">
                {tool.name}
              </span>
            ))}
          </div>
        )
      }
    </div>
  </a>
</div>

<style>
  [x-cloak] {
    display: none !important;
  }
</style>
